apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
      - name: queue
        image: richardchesterwood/k8s-fleetman-queue:release2
          resources:
            requests:
              memory: 300Mi
              cpu: 100m
            limits:
              memory: 500mi
              cpi: 500m

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-simulator
  template:
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
      - name: position-simulator
        image: richardchesterwood/k8s-fleetman-position-simulator:release2
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
# option 1: call cm using valueFrom; have to do for each env var
#        - name: DATABASE_URL
#          valueFrom:
#            configMapKeyRef:
#              name: global-database-config-v1
#              key: database.url
#        - name: DATABASE_PASSWORD
#          valueFrom:
#            configMapKeyRef:
#              name: global-database-config-v1
#              key: database.password
# option 2: use envFrom key; must use proper env var syntax
#        envFrom:
#        - configMapRef:
#            name: global-database-config-v2
# option 3: use volumeMount
        volumeMount:
          - name: database-config-volume
            mountPath: /etc/any/directory/config
      volumes:
        - name: database-config-volume
          configMap:
            name: global-database-config-v3


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: position-tracker
  template:
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
      - name: position-tracker
        image: richardchesterwood/k8s-fleetman-position-tracker:release3
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: production-microservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: richardchesterwood/k8s-fleetman-api-gateway:release2
        readinessProbe:
          # will only work if image has a webserver; img should tell you what port is exposed
          httpGet:
            path: /
            port: 8080
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: production-microservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: richardchesterwood/k8s-fleetman-webapp-angular:release2
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: production-microservice